name: Release & Deployment Pipeline

on:
  #  workflow_run:
  #   workflows: ["Frontend Build-Only Pipeline"] 
  #   types:
  #     - completed

   pull_request_review:
    types:
      - submitted
   
jobs:
   build-and-deploy:
     runs-on: ubuntu-latest 
        
     strategy:
      matrix:
        environment: [QA, Production]
        
     steps:
        - name: Checkout code
          uses: actions/checkout@v2

        # - name: Choose Deployment Environment
        #   id: choose-environment
        #   run: |
        #     echo "Which environment would you like to deploy to?"
        #     echo "selected-environment=QA" >> $GITHUB_ENV
        #     read -r environment
        #     if [[ "$environment" == "Production" ]]; then
        #     echo "SELECTED_ENVIRONMENT=Production" >> $GITHUB_ENV
        #     fi

        - name: Choose Environment
          id: environment
          run: |
           echo "::set-output name=env::${{ github.ref}}"
          shell: bash    
          
        - name: Deploy to QA
          if: steps.environment.outputs.env == 'refs/heads/develop'
          run: ./deploy_qa.sh
            # Use your QA deployment script/command here

        - name: Deploy to Production
          if: steps.environment.outputs.env == 'refs/heads/main'
          run: ./deploy_production.sh

        # - name: Set environment variable
        #   run: echo "SELECTED_ENVIRONMENT=QA" >> $GITHUB_ENV
        # - name: Deploy to ${{ matrix.environment }} Environment      
        #   run: |
        #     if [[ "$env.SELECTED_ENVIRONMENT" == "Production" ]]; then
        #       echo "Deploying to Production..."
        #       # Add your production deployment commands here
        #     elif [[ "$env.SELECTED_ENVIRONMENT" == "QA" ]]; then
        #       echo "Deploying to QA..."
        #       # Add your QA deployment commands here
        #     elif [[ "$env.SELECTED_ENVIRONMENT" == "Staging" ]]; then
        #       echo "Deploying to Staging..."
        #       # Add your staging deployment commands here
        #     fi
        
       
  
    
    
    
    
    
      
       