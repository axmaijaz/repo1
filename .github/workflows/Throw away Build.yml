name: Conditional Release Pipeline

on:
  workflow_run:
    workflows: ["Frontend Build-Only Pipeline"] 
    types:
    - completed
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  check-pr-status:
    runs-on: ubuntu-latest
    steps:
    - name: Check Build Status
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract information about the triggering workflow run
        EVENT_PAYLOAD=$(cat $GITHUB_EVENT_PATH)
        TRIGGERING_WORKFLOW_NAME=$(jq -r '.workflow.name' <<< "$EVENT_PAYLOAD")
        TRIGGERING_WORKFLOW_STATUS=$(jq -r '.workflow_run.conclusion' <<< "$EVENT_PAYLOAD")
        
        # Check if the triggering workflow was successful
        if [ "$TRIGGERING_WORKFLOW_STATUS" == "success" ]; then
          echo "Congragulation! The triggering workflow ($TRIGGERING_WORKFLOW_NAME) was successful."
          # You can add further steps here if you need to take action based on success.
        else
          echo "OOps! The triggering workflow ($TRIGGERING_WORKFLOW_NAME) failed or had another conclusion."
          # You can add further steps here if you need to take action based on failure.
        fi
      # -----------------------------------------------------
  #   - name: Check PR Status and Approvals
  #     id: pr_check
  #     run: |
  #       pr_status=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \ 
  #               "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}")
  #        approvals=$(echo $pr_status | jq -r '.reviews | map(select(.state == "APPROVED")) | length')
  #        if [[ $pr_status == *'"state":"success"'* && $approvals -gt 0 ]]; then
  #            echo "::set-output name=approved::true"
  #        else
  #           echo "::set-output name=approved::false"
  #          fi
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   outputs:
  #       approved: ${{ steps.pr_check.outputs.approved }}  # add ${{ }} for the step output
 
  # release:
  #   needs: check-pr-status
  #   runs-on: ubuntu-latest

  #   steps:
  #    - name: Conditional Release Pipeline Trigger
  #      if: ${{ needs.check-pr-status.outputs.approved == 'true' }}
  #      run: |
  #       echo "Running the release pipeline"
  #       # Add your release pipeline steps here
  #       else
  #       echo "PR is rejected or closed. Skipping release pipeline."